1. Java program to create a HashMap of integers and strings

import java.util.HashMap;
import java.util.Map;
 {
public class HashMap{
    public static void main(String[] args) {
       
        Map<Integer, String> map = new HashMap<>();

        
        map.put(1, "One");
        map.put(2, "Two");
        map.put(3, "Three");

     
        System.out.println("HashMap: " + map);
    }
}


2. Java program to find the value associated with a given key in a HashMap

import java.util.HashMap;
import java.util.Map;

public class HashMapGetValueExample {
    public static void main(String[] args) {
       
        Map<String, Integer> map = new HashMap<>();

      
        map.put("One", 1);
        map.put("Two", 2);
        map.put("Three", 3);

    
        int value = map.get("Two");

      
        System.out.println("Value: " + value);
    }
}


3. Java program to remove a key-value pair from a HashMap


import java.util.HashMap;
import java.util.Map;

public class HashMapRemove {
    public static void main(String[] args) {
        // Create a HashMap
        Map<String, Integer> map = new HashMap<>();

        // Add key-value pairs
        map.put("One", 1);
        map.put("Two", 2);
        map.put("Three", 3);

        // Remove the key-value pair with key "Two"
        map.remove("Two");

        // Print the updated HashMap
        System.out.println("HashMap: " + map);
    }
}


4. Java program to iterate through the keys and values of a HashMap:

```java
import java.util.HashMap;
import java.util.Map;

public class HashMapIteration {
    public static void main(String[] args) {
        // Create a HashMap
        Map<String, Integer> map = new HashMap<>();

        // Add key-value pairs
        map.put("One", 1);
        map.put("Two", 2);
        map.put("Three", 3);

      
        for (Map.Entry<String, Integer> entry : map.entrySet()) {
            String key = entry.getKey();
            int value = entry.getValue();
            System.out.println("Key: " + key + ", Value: " + value);
        }
    }
}
```

5. Java program to find the size of a HashMap


import java.util.HashMap;
import java.util.Map;

public class HashMapSize {
    public static void main(String[] args) {
        // Create a HashMap
        Map<String, Integer> map = new HashMap<>();

        // Add key-value pairs
        map.put("One", 1);
        map.put("Two", 2);
        map.put("Three", 3);

        // Get the size of the HashMap
        int size = map.size();

        // Print the size
        System.out.println("Size: " + size);
    }
}


6. Java program to check if a HashMap is empty

import java.util.HashMap;
import java.util.Map;

public class HashMapIsEmpty{
    public static void main(String[] args) {
        // Create a HashMap
        Map<String, Integer> map = new HashMap<>();

      
        map.put("One", 1);
        map.put("Two", 2);
        map.put("Three", 3);

        
        boolean isEmpty = map.isEmpty();

  
        System.out.println("Is Empty: " + isEmpty);
    }
}


7. Java program to clear a HashMap
import java.util.HashMap;
import java.util.Map;

public class HashMapClear {
    public static void main(String[] args) {
       
        Map<String, Integer> map = new HashMap<>();

       
        map.put("One", 1);
        map.put("Two", 2);
        map.put("Three", 3);

    
        map.clear();

     
        System.out.println("Cleared HashMap: " + map);
    }
}
```

8. Java program to merge two HashMaps into a single HashMap

import java.util.HashMap;
import java.util.Map;

public class HashMapMerge {
    public static void main(String[] args) {
    
        Map<String, Integer> map1 = new HashMap<>();
        map1.put("One", 1);
        map1.put("Two", 2);

     
        Map<String, Integer> map2 = new HashMap<>();
        map2.put("Three", 3);
        map2.put("Four", 4);

       
        Map<String, Integer> mergedMap = new HashMap<>(map1);
        mergedMap.putAll(map2);

    
        System.out.println("Merged HashMap: " + mergedMap);
    }
}


9. Java program to sort the keys of a HashMap

import java.util.HashMap;
import java.util.Map;
import java.util.TreeMap;

public class HashMapSortKeysExample {
    public static void main(String[] args) {
     
        Map<String, Integer> map = new HashMap<>();
        map.put("One", 1);
        map.put("Three", 3);
        map.put("Two", 2);

       
        Map<String, Integer> sortedMap = new TreeMap<>(map);

   
        System.out.println("Sorted HashMap (by keys): " + sortedMap);
    }
}
```

10. Java program to sort the values of a HashMap

import java.util.*;

public class HashMapSortValues {
    public static void main(String[] args) {
      
        Map<String, Integer> map = new HashMap<>();
        map.put("One", 1);
        map.put("Three", 3);
        map.put("Two", 2);

    
        List<Map.Entry<String, Integer>> entryList = new ArrayList<>(map.entrySet());

    
        Collections.sort(entryList, (e1, e2) -> e1.getValue().compareTo(e2.getValue()));

        
        Map<String, Integer> sortedMap = new LinkedHashMap<>();
        for (Map.Entry<String, Integer> entry : entryList) {
            sortedMap.put(entry.getKey(), entry
